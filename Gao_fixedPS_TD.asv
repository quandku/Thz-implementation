function [F1,F2k,x,TTD_Gao] = Gao_fixedPS_TD(Sysparam,Simparam)
%%
Nt = Sysparam.Nt;
M = Sysparam.M; %% = V_TTD in the paper
N = Sysparam.N;%% = M_T in the paper
L = Sysparam.L;
K = Sysparam.K;
F = Sysparam.F;
fc = Sysparam.fc;
tmax = Sysparam.tmax;
phi = Simparam.phi;
%% generate phase values
 % MN = Nt
    for l = 1:L
        for n = 1:N
            for m = 1:M
                x(l,(m-1)*N+n-1,m) = -((m-1)*N+n-1)*(sin(phi(l))/2)*(1+Sysparam.f/(2*fc)); 
            end 
        end 
    end 
%% PS precoder
    F1 = zeros(Nt,M*L);
    for l = 1:L
        G(:,:,l) = zeros(Nt,M);
        for m = 1:M
            G((m-1)*N+1:m*N,m,l) = exp(1j*2pi.*x(l,:,m))*exp(); 
        end 
        F1(:,(l-1)*M+1:l*M) = G(:,:,l)/sqrt(Nt); 
    end 

%% generate time delay values
   for l = 1:L
        if sin(phi(l)) > 0
            for m = 1:M
                TTD_Gao(l,m) = (m-1)*N*sin(phi(l))/(2*fc);
                if TTD_Gao(l,m) >= tmax
                    TTD_Gao(l,m) = tmax;
                end
            end
        else
            for m = 1:M
                TTD_Gao(l,m) = (M-1)*abs(N*sin(phi(l)))/(2*fc) + (m-1)*(N*sin(phi(1))/2)/fc;
                if TTD_Gao(l,m) >= tmax
                   TTD_Gao(l,m) = tmax;
                end
            end 
        end
   end
%% TTD precoder
F2k = zeros(M*L,L,K);
    for k = 1:K
      for l = 1:L
          F2k((l-1)*M+1:l*M,l,k) =exp(-1j*2*pi*F(k).*TTD_Gao(l,:)); 
      end 
    end 
end 